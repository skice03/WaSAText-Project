openapi: 3.0.3
info:
  title: WaSAText API
  description: |
    This is the API for the first WaSAText Homework.
  version: "1"
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Maria
                  pattern: 'Ë†.*?$'
                  minLength: 3
                  maxLength: 16
        required: true
      responses:
        '201':
            description: User log-in action successful
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    identifier:
                      type: integer
                      example: 1
  /users/{id}:
    get:
      summary: Get the conversations of an user
      description: |
        Return the conversation IDs for the mentioned user
      operationId: getMyConversations
      parameters:
        - name: id
          in: path
          description: The user ID for retrieving the conversations
          required: true
          schema:
            type: integer
            example: 1
      responses: 
        '200':
          description: Array containing conversation IDs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                example: [120,121,122]
        '400':
          description: The user is not authenticated
        '401':
          description: The specified user doesn't exist
                
  /users/{id}/username:
    put: 
      tags: ["users"]
      summary: Set the user's display name
      description: |
        Sets a new username for the specified user
      operationId: setMyUserName
      parameters:
        - name: id
          in: path
          description: |
            The ID of the user to be updated
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        description: New username
        content:
          application/json:
            schema: 
              type: object
              properties: 
                username: 
                  type: string
                  example: "Anna Lea"
                  minLength: 3
                  maxLength: 16
        required: true
      responses: 
        '200':
          description: Successfully updated the username
        '400':
          description: Invalid input data
        '401': 
          description: The user is not authenticated
        '404': 
          description: The specified user doesn't exist
  /users/{id}/photo:
    put:
      summary: Update the user's profile picture
      description: |
        Changes the user's profile picture to the specified .GIF file
      operationId: setMyPhoto
      parameters:
      - name: id
        in: path
        required: true
        description: The ID of the user to be updated
        schema:
          type: integer
          example: 1
      requestBody:
        description: The user's updated profile picture in .GIF format
        content: 
          image/gif:
            schema:
              type: string
              format: binary
              example: ("binary .gif data")
        required: true
      responses:
        '200':
          description: Successfully updated the user's photo
        '400':
          description: Invalid photo
        '401':
          description: The user is not authenticated.
        '404':
          description: The specified user doesn't exist
# To be added